{
	"extends": [
		"standard",
		"eslint:recommended",
		// "plugin:security/recommended",
		"plugin:node/recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:security-node/recommended",
		"plugin:eslint-plugin/recommended"
	],
	"env": {
		"es6": true,
		"node": true,
		"browser": true,
		"commonjs": true,
		"jquery": true,
		"phantomjs": true,
		"jasmine": true,
		"mocha": true,
		"amd": true,
		"worker": true,
		"qunit": true,
		"jest/globals": true
	},
	"plugins": [
		"eslint-plugin-node",
		"eslint-plugin-security", 
		"eslint-plugin-jest", 
		"@typescript-eslint", 
		"security-node"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "./backend/tsconfig.json"
	},
	"settings": {
		"jest": {
			"version": 29
		}
	},
	"rules": {
		"prettier/prettier": "off",

		"constructor-super": "error",
		"for-direction": "error",
		"getter-return": "error",
		"no-async-promise-executor": "error", 
		"no-class-assign": "error",
		"no-compare-neg-zero": "error",
		"no-cond-assign": "error", 
		"no-const-assign": "error", 
		"no-constant-condition": "error", 
		"no-control-regex": "error",
		"no-debugger": "error",
		"no-dupe-args": "error", 
		// "no-dupe-class-members": "error", 
		"no-dupe-else-if": "error",
		"no-dupe-keys": "error",
		"no-duplicate-case": "error", 
		"no-empty-character-class": "error", 
		"no-empty-pattern": "error",
		"no-ex-assign": "error", 
		"no-fallthrough": "error",
		"no-func-assign": "error", 
		"no-import-assign": "error",
		"no-inner-declarations": "error", 
		"no-invalid-regexp": "error",
		"no-irregular-whitespace": "error",  
		// "no-loss-of-precision": "error", 
		"no-misleading-character-class": "error",
		"no-new-symbol": "error",
		"no-obj-calls": "error",
		"no-prototype-builtins": "error",
		"no-self-assign": "error",
		"no-setter-return": "error", 
		"no-sparse-arrays": "error", 
		"no-this-before-super": "error",
		"no-unexpected-multiline": "error",
		"no-unreachable": "error",
		"no-unsafe-finally": "error",
		"no-unsafe-negation": "error",
		"no-unsafe-optional-chaining": "error",
		// "no-unused-vars": "error",
		"no-useless-backreference": "error",
		"use-isnan": "error",
		"valid-typeof": "error",
		"no-case-declarations": "error",
		"no-delete-var": "error", 
		"no-empty": "error", 
		"no-extra-boolean-cast": "error",
		"no-extra-semi": "error",
		"no-nonoctal-decimal-escape": "error",
		"no-octal": "error", 
		// "no-redeclare": "error", 
		"no-regex-spaces": "error",
		"no-shadow-restricted-names": "error",
		"no-unused-labels": "error",
		"no-useless-catch": "error",
		"no-useless-escape": "error", 
		"no-with": "error",
		"require-yield": "error",
		"no-mixed-spaces-and-tabs": "off",
		"no-global-assign": "off",
		"no-undef": "error",
		"indent": "off",
		"no-tabs": "off",
		"quotes": "off",
		"quote-props": "off",
		"semi": "off",
		"key-spacing": "off",
		"object-curly-spacing": "off",
		"space-before-function-paren": "off",
		"arrow-spacing": "off",
		"space-before-blocks": "off",
		"eqeqeq": "off",
		"no-var": "off",
		"comma-spacing": "off",
		"object-curly-newline": "off",
		"keyword-spacing": "off",
		"no-trailing-spaces": "off",
		"camelcase": "off",
		"no-multiple-empty-lines": "off",
		"spaced-comment": "off",
		"space-infix-ops": "off",
		"space-in-parens": "off",
		"padded-blocks": "off",
		"semi-spacing": "off",
		"brace-style": "off",
		"no-multi-spaces": "off",
		"eol-last": "off",
		"no-template-curly-in-string": "off",
		"comma-dangle": "off",
		"prefer-const": "off",
		"no-useless-return": "off",
		"operator-linebreak": "off",
		// "dot-notation": "off",
		// "no-throw-literal": "off",
		"space-unary-ops": "off",
		"array-bracket-spacing": "off",
		// "prefer-promise-reject-errors": "off",
		"func-call-spacing": "off",
		"object-property-newline": "off",
		"block-spacing": "off",
		"lines-between-class-members": "off",
		"no-whitespace-before-property": "off",
		"curly": "off",

		"node/no-exports-assign": "off",
		"node/no-extraneous-import": "off",
		"node/no-extraneous-require": "off",
		"node/no-missing-import": "off",
		"node/no-unpublished-bin": "off",
		"node/no-unpublished-import": "off",
		"node/no-unsupported-features/es-builtins": "off",
		"node/no-unsupported-features/es-syntax": "off",
		"node/process-exit-as-throw": "off",
		"node/shebang": "off",
		"node/no-deprecated-api": "off",
		"node/no-missing-require": "off",
		"node/no-unpublished-require": "off",
		"node/no-unsupported-features/node-builtins": "off",

		"security/detect-disable-mustache-escape": "error", 
		"security/detect-eval-with-expression": "error",
		"security/detect-no-csrf-before-method-override": "error", 
		"security/detect-non-literal-fs-filename": "error", 
		"security/detect-non-literal-regexp": "error",
		"security/detect-non-literal-require": "error",
		"security/detect-possible-timing-attacks": "error", 
		"security/detect-pseudoRandomBytes": "error",
		"security/detect-unsafe-regex": "error",
		"security/detect-object-injection": "error",
		"security/detect-buffer-noassert": "error",
		"security/detect-new-buffer": "error",

		// typescript rules
		"@typescript-eslint/adjacent-overload-signatures": "error", 
		"@typescript-eslint/array-type": "error",
		"@typescript-eslint/await-thenable": "error",
		"@typescript-eslint/ban-ts-comment": "error",
		"@typescript-eslint/ban-tslint-comment": "error",
		"@typescript-eslint/ban-types": "error",
		"@typescript-eslint/class-literal-property-style": "error", 
		// Note: you must disable the base rule as it can report incorrect errors
		"class-methods-use-this": "off",
		"@typescript-eslint/class-methods-use-this": "off",
		"@typescript-eslint/consistent-generic-constructors": "error",
		"@typescript-eslint/consistent-indexed-object-style": "error",
		// Note: you must disable the base rule as it can report incorrect errors
		"consistent-return": "off",
		"@typescript-eslint/consistent-return": "off",
		"@typescript-eslint/consistent-type-assertions": "error",
		"@typescript-eslint/consistent-type-definitions": "error", 
		"@typescript-eslint/consistent-type-exports": "off",
		"@typescript-eslint/consistent-type-imports": "off",
		// Note: you must disable the base rule as it can report incorrect errors
		"default-param-last": "off",
		"@typescript-eslint/default-param-last": "off",
		// Note: you must disable the base rule as it can report incorrect errors
		"dot-notation": "off",
		"@typescript-eslint/dot-notation": "error",
		"@typescript-eslint/explicit-function-return-type": "off",
		"@typescript-eslint/explicit-member-accessibility": "off",
		"@typescript-eslint/explicit-module-boundary-types": "off",
		// Note: you must disable the base rule as it can report incorrect errors
		"init-declarations": "off",
		"@typescript-eslint/init-declarations": "off",
		// Note: you must disable the base rule as it can report incorrect errors
		"max-params": "off",
		"@typescript-eslint/max-params": "off",
		"@typescript-eslint/member-ordering": "off",
		"@typescript-eslint/method-signature-style": "off",
		"@typescript-eslint/naming-convention": "off",
		// Note: you must disable the base rule as it can report incorrect errors
		"no-array-constructor": "off",
		"@typescript-eslint/no-array-constructor": "error", 
		"@typescript-eslint/no-array-delete": "error", 
		"@typescript-eslint/no-base-to-string": "error",
		"@typescript-eslint/no-confusing-non-null-assertion": "error",
		"@typescript-eslint/no-confusing-void-expression": "error",
		"@typescript-eslint/no-deprecated": "off",
		// Note: you must disable the base rule as it can report incorrect errors
		"no-dupe-class-members": "off",
		"@typescript-eslint/no-dupe-class-members": "error",
		"@typescript-eslint/no-duplicate-enum-values": "error",
		"@typescript-eslint/no-duplicate-type-constituents": "error",
		"@typescript-eslint/no-dynamic-delete": "error",
		// Note: you must disable the base rule as it can report incorrect errors
		"no-empty-function": "off",
		"@typescript-eslint/no-empty-function": "error", 
		"@typescript-eslint/no-empty-interface": "error", 
		"@typescript-eslint/no-empty-object-type": "off",
		"@typescript-eslint/no-explicit-any": "error",
		"@typescript-eslint/no-extra-non-null-assertion": "error",
		"@typescript-eslint/no-extraneous-class": "error",
		"@typescript-eslint/no-floating-promises": "error",
		"@typescript-eslint/no-for-in-array": "error", 
		// Note: you must disable the base rule as it can report incorrect errors
		"no-implied-eval": "off",
		"@typescript-eslint/no-implied-eval": "error", 
		"@typescript-eslint/no-import-type-side-effects": "off",
		"@typescript-eslint/no-inferrable-types": "error",
		// Note: you must disable the base rule as it can report incorrect errors
		"no-invalid-this": "off",
		"@typescript-eslint/no-invalid-this": "off",
		"@typescript-eslint/no-invalid-void-type": "error",
		// Note: you must disable the base rule as it can report incorrect errors
		"no-loop-func": "off",
		"@typescript-eslint/no-loop-func": "off",
		// Note: you must disable the base rule as it can report incorrect errors
		"no-loss-of-precision": "off",
		"@typescript-eslint/no-loss-of-precision": "error",
		// Note: you must disable the base rule as it can report incorrect errors
		"no-magic-numbers": "off",
		"@typescript-eslint/no-magic-numbers": "off",
		"@typescript-eslint/no-meaningless-void-operator": "error",
		"@typescript-eslint/no-misused-new": "error",
		"@typescript-eslint/no-misused-promises": "error",
		"@typescript-eslint/no-misused-spread": "off",
		"@typescript-eslint/no-mixed-enums": "error",
		"@typescript-eslint/no-namespace": "error", 
		"@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
		"@typescript-eslint/no-non-null-asserted-optional-chain": "error",
		"@typescript-eslint/no-non-null-assertion": "error", 
		// Note: you must disable the base rule as it can report incorrect errors
		"no-redeclare": "off",
		"@typescript-eslint/no-redeclare": "error",
		"@typescript-eslint/no-redundant-type-constituents": "error", 
		"@typescript-eslint/no-require-imports": "error",
		// Note: you must disable the base rule as it can report incorrect errors
		"no-restricted-imports": "off",
		"@typescript-eslint/no-restricted-imports": "off",
		"@typescript-eslint/no-restricted-types": "off",
		// Note: you must disable the base rule as it can report incorrect errors
		"no-shadow": "off",
		"@typescript-eslint/no-shadow": "off",
		"@typescript-eslint/no-this-alias": "error", 
		"@typescript-eslint/no-type-alias": "off",
		"@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
		"@typescript-eslint/no-unnecessary-condition": "error",
		"@typescript-eslint/no-unnecessary-parameter-property-assignment": "off",
		"@typescript-eslint/no-unnecessary-qualifier": "off",
		"@typescript-eslint/no-unnecessary-template-expression": "error",
		"@typescript-eslint/no-unnecessary-type-arguments": "error",
		"@typescript-eslint/no-unnecessary-type-assertion": "error", 
		"@typescript-eslint/no-unnecessary-type-constraint": "error",
		"@typescript-eslint/no-unnecessary-type-parameters": "off",
		"@typescript-eslint/no-unsafe-argument": "error",
		"@typescript-eslint/no-unsafe-assignment": "off",
		"@typescript-eslint/no-unsafe-call": "off",
		"@typescript-eslint/no-unsafe-declaration-merging": "error",
		"@typescript-eslint/no-unsafe-enum-comparison": "error",
		"@typescript-eslint/no-unsafe-function-type": "off",
		"@typescript-eslint/no-unsafe-member-access": "off", 
		"@typescript-eslint/no-unsafe-return": "error",
		"@typescript-eslint/no-unsafe-type-assertion": "off",
		"@typescript-eslint/no-unsafe-unary-minus": "off",
		// Note: you must disable the base rule as it can report incorrect errors
		"no-unused-expressions": "off",
		"@typescript-eslint/no-unused-expressions": "off",
		// Note: you must disable the base rule as it can report incorrect errors
		"no-unused-vars": "off",
		"@typescript-eslint/no-unused-vars": "error",
		// Note: you must disable the base rule as it can report incorrect errors
		"no-use-before-define": "off",
		"@typescript-eslint/no-use-before-define": "off",
		// Note: you must disable the base rule as it can report incorrect errors
		"no-useless-constructor": "off",
		"@typescript-eslint/no-useless-constructor": "error",
		"@typescript-eslint/no-useless-empty-export": "off",
		"@typescript-eslint/no-var-requires": "error",
		"@typescript-eslint/no-wrapper-object-types": "off",
		"@typescript-eslint/non-nullable-type-assertion-style": "error",
		// Note: you must disable the base rule as it can report incorrect errors
		"no-throw-literal": "off",
		"@typescript-eslint/only-throw-error": "error",
		"@typescript-eslint/parameter-properties": "off",
		"@typescript-eslint/prefer-as-const": "error",
		// Note: you must disable the base rule as it can report incorrect errors
		"prefer-destructuring": "off",
		"@typescript-eslint/prefer-destructuring": "off",
		"@typescript-eslint/prefer-enum-initializers": "off",
		"@typescript-eslint/prefer-find": "off",
		"@typescript-eslint/prefer-for-of": "error", 
		"@typescript-eslint/prefer-function-type": "error",
		"@typescript-eslint/prefer-includes": "error",
		"@typescript-eslint/prefer-literal-enum-member": "error",
		"@typescript-eslint/prefer-namespace-keyword": "error",
		"@typescript-eslint/prefer-nullish-coalescing": "error", 
		"@typescript-eslint/prefer-optional-chain": "error",
		// Note: you must disable the base rule as it can report incorrect errors
		"prefer-promise-reject-errors": "off",
		"@typescript-eslint/prefer-promise-reject-errors": "error",
		"@typescript-eslint/prefer-readonly": "off",
		"@typescript-eslint/prefer-readonly-parameter-types": "off",
		"@typescript-eslint/prefer-reduce-type-parameter": "error",
		"@typescript-eslint/prefer-regexp-exec": "off",
		"@typescript-eslint/prefer-return-this-type": "error",	
		"@typescript-eslint/prefer-string-starts-ends-with": "error",
		"@typescript-eslint/prefer-ts-expect-error": "off",
		"@typescript-eslint/promise-function-async": "off",
		"@typescript-eslint/related-getter-setter-pairs": "off",
		"@typescript-eslint/require-array-sort-compare": "off",
		// Note: you must disable the base rule as it can report incorrect errors
		"require-await": "off",
		"@typescript-eslint/require-await": "error",
		"@typescript-eslint/restrict-plus-operands": "error",
		"@typescript-eslint/restrict-template-expressions": "error",
		"@typescript-eslint/return-await": "off",
		"@typescript-eslint/sort-type-constituents": "off",
		"@typescript-eslint/strict-boolean-expressions": "off",
		"@typescript-eslint/switch-exhaustiveness-check": "off",
		"@typescript-eslint/triple-slash-reference": "error",
		"@typescript-eslint/typedef": "off",
		"@typescript-eslint/unbound-method": "error",
		"@typescript-eslint/unified-signatures": "error",
		"@typescript-eslint/use-unknown-in-catch-callback-variable": "error",

		// security-node
		"non-literal-reg-expr": "error",
		"detect-absence-of-name-option-in-exrpress-session": "error",
		"detect-buffer-unsafe-allocation": "off",
		"detect-child-process": "error",
		"detect-crlf": "off",
		"detect-dangerous-redirects": "off",
		"detect-eval-with-expr": "off",
		"detect-html-injection": "off",
		"detect-insecure-randomness": "off",
		"detect-non-literal-require-calls": "error",	
		"detect-nosql-injection": "error",
		"detect-option-multiplestatements-in-mysql": "error", 
		"detect-option-rejectunauthorized-in-nodejs-httpsrequest": "error",
		"detect-option-unsafe-in-serialize-javascript-npm-package": "error",
		"detect-possible-timing-attacks": "off",
		"detect-runinthiscontext-method-in-nodes-vm":"off",
		"detect-security-missconfiguration-cookie": "error",
		"detect-sql-injection": "off",
		"disable-ssl-across-node-server": "off",
		"detect-improper-exception-handling": "error",
		"detect-unhandled-async-errors": "error", 
		"detect-unhandled-event-errors": "error", 

		// eslint-plugin
		"eslint-plugin/fixer-return": "error",
		"eslint-plugin/meta-property-ordering": "off",
		"eslint-plugin/no-deprecated-context-methods": "error",
		"eslint-plugin/no-deprecated-report-api": "off",
		"eslint-plugin/no-meta-schema-default": "off",
		"eslint-plugin/no-missing-message-ids": "error",
		"eslint-plugin/no-missing-placeholders": "error",
		"eslint-plugin/no-property-in-node": "off",
		"eslint-plugin/no-unused-message-ids": "off",
		"eslint-plugin/no-unused-placeholders": "off",
		"eslint-plugin/no-useless-token-range": "off",
		"eslint-plugin/prefer-message-ids": "off",
		"eslint-plugin/prefer-object-rule": "error",
		"eslint-plugin/prefer-placeholders": "off",
		"eslint-plugin/prefer-replace-text": "off",
		"eslint-plugin/report-message-format": "off",
		"eslint-plugin/require-meta-default-options": "off",
		"eslint-plugin/require-meta-docs-description": "off",
		"eslint-plugin/require-meta-docs-recommended": "off",
		"eslint-plugin/require-meta-docs-url": "off",
		"eslint-plugin/require-meta-fixable": "error",
		"eslint-plugin/require-meta-has-suggestions": "off",
		"eslint-plugin/require-meta-schema": "off",
		"eslint-plugin/require-meta-schema-description": "off",
		"eslint-plugin/require-meta-type": "error",
		"eslint-plugin/consistent-output": "off",
		"eslint-plugin/no-identical-tests": "off",
		"eslint-plugin/no-only-tests": "off",
		"eslint-plugin/prefer-output-null": "off",
		"eslint-plugin/test-case-property-ordering": "off",
		"eslint-plugin/test-case-shorthand-strings": "off" 
	}
}
